{
  "openapi": "3.1.0",
  "info": {
    "title": "Autobots",
    "description": "Autobots enables unified access to AI actions",
    "contact": {
      "name": "Anurag Jha",
      "email": "aj@jetoslabs.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "0.1.0"
  },
  "paths": {
    "/v1/hello/": {
      "get": {
        "tags": [
          "/hello"
        ],
        "summary": "Hello",
        "operationId": "hello_v1_hello__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        }
      }
    },
    "/v1/auth/": {
      "post": {
        "tags": [
          "/auth"
        ],
        "summary": "Return User And Session",
        "description": "Returns Auth Response (User and Session)\n:return: AuthResponse",
        "operationId": "return_user_and_session_v1_auth__post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_return_user_and_session_v1_auth__post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/token": {
      "post": {
        "tags": [
          "/auth"
        ],
        "summary": "Return Token",
        "description": "OAuth2 endpoint\nsigns in user(username/password) and returns JWT token\n:return: BearerToken",
        "operationId": "return_token_v1_auth_token_post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_return_token_v1_auth_token_post"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BearerAccessToken"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/token/test": {
      "post": {
        "tags": [
          "/auth"
        ],
        "summary": "Test Auth Access Token",
        "operationId": "test_auth_access_token_v1_auth_token_test_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/auth/creds/test": {
      "post": {
        "tags": [
          "/auth"
        ],
        "summary": "Test Auth Creds",
        "operationId": "test_auth_creds_v1_auth_creds_test_post",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/v1/auth/password/reset": {
      "post": {
        "tags": [
          "/auth"
        ],
        "summary": "Reset Password Email",
        "operationId": "reset_password_email_v1_auth_password_reset_post",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email",
              "title": "Email"
            }
          },
          {
            "name": "redirect_to",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string",
                  "format": "uri",
                  "minLength": 1,
                  "maxLength": 2083
                },
                {
                  "type": "null"
                }
              ],
              "title": "Redirect To"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean",
                  "title": "Response Reset Password Email V1 Auth Password Reset Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/session/refresh": {
      "post": {
        "tags": [
          "/auth"
        ],
        "summary": "Refresh Password Email",
        "operationId": "refresh_password_email_v1_auth_session_refresh_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "refresh_token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Refresh Token"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/actions/types": {
      "get": {
        "tags": [
          "/actions"
        ],
        "summary": "Get Action Types",
        "operationId": "get_action_types_v1_actions_types_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array",
                  "title": "Response Get Action Types V1 Actions Types Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/actions_types/{action_type}": {
      "get": {
        "tags": [
          "/actions"
        ],
        "summary": "Get Action Type Objects",
        "operationId": "get_action_type_objects_v1_actions_types__action_type__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_type",
            "in": "path",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ActionType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Get Action Type Objects V1 Actions Types  Action Type  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/actions/": {
      "post": {
        "tags": [
          "/actions"
        ],
        "summary": "Create Action",
        "operationId": "create_action_v1_actions__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "/actions"
        ],
        "summary": "List Actions",
        "operationId": "list_actions_v1_actions__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Version"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActionType"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "is_published",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Is Published"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionDoc"
                  },
                  "title": "Response List Actions V1 Actions  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/actions/{id}": {
      "get": {
        "tags": [
          "/actions"
        ],
        "summary": "Get Action",
        "operationId": "get_action_v1_actions__id__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/actions"
        ],
        "summary": "Update Action",
        "operationId": "update_action_v1_actions__id__put",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/actions"
        ],
        "summary": "Delete Action",
        "operationId": "delete_action_v1_actions__id__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/actions/{id}/run": {
      "post": {
        "tags": [
          "/actions"
        ],
        "summary": "Run Action",
        "operationId": "run_action_v1_actions__id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "action_result_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Action Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Run Action V1 Actions  Id  Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/actions/{id}/async_run": {
      "post": {
        "tags": [
          "/actions"
        ],
        "summary": "Async Run Action",
        "operationId": "async_run_action_v1_actions__id__async_run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "action_result_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Action Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_async_run_action_v1_actions__id__async_run_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/multimodal/assistant_openai": {
      "post": {
        "tags": [
          "/action_types/multimodal"
        ],
        "summary": "Create Action Multimodal Assistant Openai",
        "operationId": "create_action_multimodal_assistant_openai_v1_action_types_multimodal_assistant_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateMultimodalAssistantOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2text/llm_chat_openai": {
      "post": {
        "tags": [
          "/action_types/text2text"
        ],
        "summary": "Create Action Text2Text Llm Chat Openai",
        "operationId": "create_action_text2text_llm_chat_openai_v1_action_types_text2text_llm_chat_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2TextLlmChatOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2text/llm_chat_with_vector_search_openai": {
      "post": {
        "tags": [
          "/action_types/text2text"
        ],
        "summary": "Create Action Text2Text Llm Chat With Vector Search Openai",
        "operationId": "create_action_text2text_llm_chat_with_vector_search_openai_v1_action_types_text2text_llm_chat_with_vector_search_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2TextLlmChatWithVectorSearchOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2text/read_url": {
      "post": {
        "tags": [
          "/action_types/text2text"
        ],
        "summary": "Create Action Text2Text Read Url",
        "operationId": "create_action_text2text_read_url_v1_action_types_text2text_read_url_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2TextReadUrl"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2text/search_web": {
      "post": {
        "tags": [
          "/action_types/text2text"
        ],
        "summary": "Create Action Text2Text Search Web",
        "operationId": "create_action_text2text_search_web_v1_action_types_text2text_search_web_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2TextSearchWeb"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2text/search_maps": {
      "post": {
        "tags": [
          "/action_types/text2text"
        ],
        "summary": "Create Action Text2Text Search Maps",
        "operationId": "create_action_text2text_search_maps_v1_action_types_text2text_search_maps_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2TextSearchMaps"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2text/user_input": {
      "post": {
        "tags": [
          "/action_types/text2text"
        ],
        "summary": "Create Action Text2Text User Input",
        "operationId": "create_action_text2text_user_input_v1_action_types_text2text_user_input_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2TextUserInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2img/dalle_openai": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Create Text2Img Dalle Openai",
        "operationId": "create_text2img_dalle_openai_v1_action_types_text2img_dalle_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateGenImageDalleOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2img/dalle_openai/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Run Text2Img Dalle Openai",
        "operationId": "run_text2img_dalle_openai_v1_action_types_text2img_dalle_openai__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImagesResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/text2img/stable_diffusion": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Create Action Text2Img Stable Diffusion",
        "operationId": "create_action_text2img_stable_diffusion_v1_action_types_text2img_stable_diffusion_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateAPIModelText2ImgStableDiffusion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2img/stable_diffusion/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Run Action Text2Img Stable Diffusion",
        "operationId": "run_action_text2img_stable_diffusion_v1_action_types_text2img_stable_diffusion__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/src__autobots__action__action_type__action_text2img__action_text2img_stable_diffusion__Text2ImgRunModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StableDiffusionRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/text2img_imagine/mid_journey": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Create Action Text2Img Imagine Midjourney",
        "operationId": "create_action_text2img_imagine_midjourney_v1_action_types_text2img_imagine_mid_journey_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateAPIModelText2ImgMidjourney"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2img_button/mid_journey": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Create Action Text2Img Button Midjourney",
        "operationId": "create_action_text2img_button_midjourney_v1_action_types_text2img_button_mid_journey_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateAPIModelText2ImgMidjourney"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2img/mid_journey/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Run Action Text2Img Midjourney",
        "operationId": "run_action_text2img_midjourney_v1_action_types_text2img_mid_journey__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/src__autobots__action__action_type__action_text2img__action_text2img_imagine_midjourney__Text2ImgRunModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DiscordJobsApiResponse"
                    },
                    {
                      "$ref": "#/components/schemas/DiscordErrorResponse"
                    }
                  ],
                  "title": "Response Run Action Text2Img Midjourney V1 Action Types Text2Img Mid Journey  Action Id  Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/text2img/mid_journey/button/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/text2img"
        ],
        "summary": "Run Action Text2Img Midjourney",
        "operationId": "run_action_text2img_midjourney_v1_action_types_text2img_mid_journey_button__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Text2ImgRunModelButton"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DiscordJobsApiResponse"
                    },
                    {
                      "$ref": "#/components/schemas/DiscordErrorResponse"
                    }
                  ],
                  "title": "Response Run Action Text2Img Midjourney V1 Action Types Text2Img Mid Journey Button  Action Id  Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/img2img/image_mixer_stable_diffusion": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Create Action Image Mixer Stable Diffusion",
        "operationId": "create_action_image_mixer_stable_diffusion_v1_action_types_img2img_image_mixer_stable_diffusion_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateImageMixerStableDiffusion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/img2img/image_mixer/stable_diffusion/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Run Action Image Mixer Stable Diffusion",
        "operationId": "run_action_image_mixer_stable_diffusion_v1_action_types_img2img_image_mixer_stable_diffusion__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ImageMixerRunModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StableDiffusionRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/img2img/edit_openai": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Create Img2Img Edit Openai",
        "operationId": "create_img2img_edit_openai_v1_action_types_img2img_edit_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateImg2ImgEditOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/img2img/variation_openai": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Create Img2Img Edit Openai",
        "operationId": "create_img2img_edit_openai_v1_action_types_img2img_variation_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateImg2ImgVariationOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/img2img/claid/bulk_edit": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Create Action Img2Img Bulk Edit Claid",
        "operationId": "create_action_img2img_bulk_edit_claid_v1_action_types_img2img_claid_bulk_edit_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateImg2ImgBulkEditClaid"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/img2img/claid/photoshoot": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Create Action Img2Img Photoshoot Claid",
        "operationId": "create_action_img2img_photoshoot_claid_v1_action_types_img2img_claid_photoshoot_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateImg2ImgPhotoShootClaid"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/img2img/claid/bulk_edit/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Run Action Img2Img Bulk Edit Claid",
        "operationId": "run_action_img2img_bulk_edit_claid_v1_action_types_img2img_claid_bulk_edit__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaidRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/img2img/claid/photoshoot/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/img2img"
        ],
        "summary": "Run Action Img2Img Photoshoot Claid",
        "operationId": "run_action_img2img_photoshoot_claid_v1_action_types_img2img_claid_photoshoot__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClaidPhotoShootRequestModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClaidPhotoShootOutputModel-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/text2video/stable_diffusion": {
      "post": {
        "tags": [
          "/action_types/text2video"
        ],
        "summary": "Create Action Text2Video Stable Diffusion",
        "operationId": "create_action_text2video_stable_diffusion_v1_action_types_text2video_stable_diffusion_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateAPIModelText2VideoStableDiffusion"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/text2video/stable_diffusion/{action_id}/run": {
      "post": {
        "tags": [
          "/action_types/text2video"
        ],
        "summary": "Run Action Text2Video Stable Diffusion",
        "operationId": "run_action_text2video_stable_diffusion_v1_action_types_text2video_stable_diffusion__action_id__run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Text2VideoRunModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StableDiffusionRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_types/text2audio/speech_openai": {
      "post": {
        "tags": [
          "/action_types/text2audio"
        ],
        "summary": "Create Action Text2Audio Speech Openai",
        "operationId": "create_action_text2audio_speech_openai_v1_action_types_text2audio_speech_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateText2AudioSpeechOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/audio2text/transcription_openai": {
      "post": {
        "tags": [
          "/action_types/audio2text"
        ],
        "summary": "Create Action Audio2Text Transcription Openai",
        "operationId": "create_action_audio2text_transcription_openai_v1_action_types_audio2text_transcription_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateAudio2TextTranscriptionOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_types/audio2text/translation_openai": {
      "post": {
        "tags": [
          "/action_types/audio2text"
        ],
        "summary": "Create Action Audio2Text Translation Openai",
        "operationId": "create_action_audio2text_translation_openai_v1_action_types_audio2text_translation_openai_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionCreateAudio2TextTranslationOpenai"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/action_results/": {
      "get": {
        "tags": [
          "/action_results"
        ],
        "summary": "List Action Result",
        "operationId": "list_action_result_v1_action_results__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventResultStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "is_saved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Is Saved"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionResultDoc"
                  },
                  "title": "Response List Action Result V1 Action Results  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/action_results"
        ],
        "summary": "Update Action Result",
        "operationId": "update_action_result_v1_action_results__put",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_results/{id}": {
      "get": {
        "tags": [
          "/action_results"
        ],
        "summary": "Get Action Result",
        "operationId": "get_action_result_v1_action_results__id__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/action_results"
        ],
        "summary": "Delete Action Result",
        "operationId": "delete_action_result_v1_action_results__id__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/fetch/stable_diffusion": {
      "post": {
        "tags": [
          "action_results/stable_diffusion"
        ],
        "summary": "Fetch Stable Diffusion",
        "operationId": "fetch_stable_diffusion_v1_fetch_stable_diffusion_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "stable_diffusion_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Stable Diffusion Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StableDiffusionRes"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_chats/": {
      "post": {
        "tags": [
          "/action_chats"
        ],
        "summary": "Create Chat",
        "operationId": "create_chat_v1_action_chats__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "action_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Action Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "/action_chats"
        ],
        "summary": "List Chat",
        "operationId": "list_chat_v1_action_chats__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "title",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Title"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ChatDoc"
                  },
                  "title": "Response List Chat V1 Action Chats  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_chats/{id}": {
      "get": {
        "tags": [
          "/action_chats"
        ],
        "summary": "Get Chat",
        "operationId": "get_chat_v1_action_chats__id__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/action_chats"
        ],
        "summary": "Update Chat",
        "operationId": "update_chat_v1_action_chats__id__put",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/action_chats"
        ],
        "summary": "Delete Chat",
        "operationId": "delete_chat_v1_action_chats__id__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ChatDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "/action_chats"
        ],
        "summary": "Chat",
        "operationId": "chat_v1_action_chats__id__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Chat V1 Action Chats  Id  Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_market/{id}/market/": {
      "post": {
        "tags": [
          "/action_market"
        ],
        "summary": "Create Market Action",
        "operationId": "create_market_action_v1_action_market__id__market__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_market/market": {
      "get": {
        "tags": [
          "/action_market"
        ],
        "summary": "List Market Actions",
        "operationId": "list_market_actions_v1_action_market_market_get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "User Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Version"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/ActionType"
                }
              ],
              "title": "Type"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionDoc"
                  },
                  "title": "Response List Market Actions V1 Action Market Market Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_market/{id}/market": {
      "get": {
        "tags": [
          "/action_market"
        ],
        "summary": "Get Market Action",
        "operationId": "get_market_action_v1_action_market__id__market_get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ActionDoc"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Get Market Action V1 Action Market  Id  Market Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/action_market"
        ],
        "summary": "Delete Market Action",
        "operationId": "delete_market_action_v1_action_market__id__market_delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_market/{id}/market/run": {
      "post": {
        "tags": [
          "/action_market"
        ],
        "summary": "Run Market Action",
        "operationId": "run_market_action_v1_action_market__id__market_run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "title": "Input"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_market/{id}/market/async_run": {
      "post": {
        "tags": [
          "/action_market"
        ],
        "summary": "Async Run Action",
        "operationId": "async_run_action_v1_action_market__id__market_async_run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_async_run_action_v1_action_market__id__market_async_run_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_graphs/": {
      "post": {
        "tags": [
          "/action_graphs"
        ],
        "summary": "Create Action Graph",
        "operationId": "create_action_graph_v1_action_graphs__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionGraphCreate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphDoc-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "/action_graphs"
        ],
        "summary": "List Action Graphs",
        "operationId": "list_action_graphs_v1_action_graphs__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "schema": {
              "type": "number",
              "title": "Version"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionGraphDoc-Output"
                  },
                  "title": "Response List Action Graphs V1 Action Graphs  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_graphs/{id}": {
      "get": {
        "tags": [
          "/action_graphs"
        ],
        "summary": "Get Action Graph",
        "operationId": "get_action_graph_v1_action_graphs__id__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphDoc-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/action_graphs"
        ],
        "summary": "Update Action Graph",
        "operationId": "update_action_graph_v1_action_graphs__id__put",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionGraphUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphDoc-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/action_graphs"
        ],
        "summary": "Delete Action Graph",
        "operationId": "delete_action_graph_v1_action_graphs__id__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphDoc-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_graphs/{id}/async_run": {
      "post": {
        "tags": [
          "/action_graphs"
        ],
        "summary": "Async Run Action Graph",
        "operationId": "async_run_action_graph_v1_action_graphs__id__async_run_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "action_graph_result_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Action Graph Result Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_async_run_action_graph_v1_action_graphs__id__async_run_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ActionGraphResultDoc"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Async Run Action Graph V1 Action Graphs  Id  Async Run Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_graphs_results/": {
      "get": {
        "tags": [
          "/action_graphs_results"
        ],
        "summary": "List Action Graph Result",
        "operationId": "list_action_graph_result_v1_action_graphs_results__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/EventResultStatus"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "is_saved",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "title": "Is Saved"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ActionGraphResultDoc"
                  },
                  "title": "Response List Action Graph Result V1 Action Graphs Results  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "/action_graphs_results"
        ],
        "summary": "Update Action Graph Result",
        "operationId": "update_action_graph_result_v1_action_graphs_results__put",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ActionGraphResultUpdate"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/action_graphs_results/{id}": {
      "get": {
        "tags": [
          "/action_graphs_results"
        ],
        "summary": "Get Action Graph Result",
        "operationId": "get_action_graph_result_v1_action_graphs_results__id__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/action_graphs_results"
        ],
        "summary": "Delete Action Graph Result",
        "operationId": "delete_action_graph_result_v1_action_graphs_results__id__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionGraphResultDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Create Datastore",
        "operationId": "create_datastore_v1_datastore__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatastoreMetaDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "/datastore"
        ],
        "summary": "List Datastore",
        "operationId": "list_datastore_v1_datastore__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100,
              "title": "Limit"
            }
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Offset"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DatastoreMetaDoc"
                  },
                  "title": "Response List Datastore V1 Datastore  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{name}": {
      "get": {
        "tags": [
          "/datastore"
        ],
        "summary": "Get Datastore",
        "operationId": "get_datastore_v1_datastore__name__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatastoreMetaDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/store_text": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Store Text",
        "operationId": "store_text_v1_datastore__id__store_text_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "chunk_token_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 512,
              "title": "Chunk Token Size"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/store_file": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Upload Files",
        "operationId": "upload_files_v1_datastore__id__store_file_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "chunk_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500,
              "title": "Chunk Size"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_files_v1_datastore__id__store_file_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/store_urls": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Store Urls",
        "operationId": "store_urls_v1_datastore__id__store_urls_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "chunk_token_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 512,
              "title": "Chunk Token Size"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "format": "uri",
                  "minLength": 1,
                  "maxLength": 2083
                },
                "title": "Urls"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/search": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Search",
        "operationId": "search_v1_datastore__id__search_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "top_k",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "title": "Top K"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextObj"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  },
                  "title": "Response Search V1 Datastore  Id  Search Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}": {
      "delete": {
        "tags": [
          "/datastore"
        ],
        "summary": "Delete Datastore",
        "operationId": "delete_datastore_v1_datastore__id__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DatastoreMetaDoc"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/store_data/async": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Store Data Async",
        "operationId": "store_data_async_v1_datastore__id__store_data_async_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "chunk_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500,
              "title": "Chunk Size"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_store_data_async_v1_datastore__id__store_data_async_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatastoreResultDoc"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Store Data Async V1 Datastore  Id  Store Data Async Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/store_files/async": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Store Files Async",
        "operationId": "store_files_async_v1_datastore__id__store_files_async_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "chunk_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500,
              "title": "Chunk Size"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_store_files_async_v1_datastore__id__store_files_async_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatastoreResultDoc"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Store Files Async V1 Datastore  Id  Store Files Async Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/{id}/store_urls/async": {
      "post": {
        "tags": [
          "/datastore"
        ],
        "summary": "Store Urls Async",
        "operationId": "store_urls_async_v1_datastore__id__store_urls_async_post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Id"
            }
          },
          {
            "name": "chunk_size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 500,
              "title": "Chunk Size"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_store_urls_async_v1_datastore__id__store_urls_async_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/DatastoreResultDoc"
                    },
                    {
                      "type": "null"
                    }
                  ],
                  "title": "Response Store Urls Async V1 Datastore  Id  Store Urls Async Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/datastore/result/{datastore_put_result_id}": {
      "get": {
        "tags": [
          "/datastore"
        ],
        "summary": "Get Datastore Put Result",
        "operationId": "get_datastore_put_result_v1_datastore_result__datastore_put_result_id__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "datastore_put_result_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Datastore Put Result Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/openai_files/": {
      "post": {
        "tags": [
          "/openai_files"
        ],
        "summary": "Upload File",
        "operationId": "upload_file_v1_openai_files__post",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file_v1_openai_files__post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "/openai_files"
        ],
        "summary": "Get File Info",
        "operationId": "get_file_info_v1_openai_files__get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileObject"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "/openai_files"
        ],
        "summary": "Delete File",
        "operationId": "delete_file_v1_openai_files__delete",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDeleted"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/openai_files/list": {
      "get": {
        "tags": [
          "/openai_files"
        ],
        "summary": "List Files Info",
        "operationId": "list_files_info_v1_openai_files_list_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FileObject"
                  },
                  "type": "array",
                  "title": "Response List Files Info V1 Openai Files List Get"
                }
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/openai_files/content": {
      "get": {
        "tags": [
          "/openai_files"
        ],
        "summary": "Get File",
        "operationId": "get_file_v1_openai_files_content_get",
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ],
        "parameters": [
          {
            "name": "file_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "title": "File Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "title": "Response Get File V1 Openai Files Content Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/react": {
      "post": {
        "tags": [
          "/agents"
        ],
        "summary": "Run React Agent",
        "operationId": "run_react_agent_v1_agents_react_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TextObj"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "items": {},
                  "type": "array",
                  "title": "Response Run React Agent V1 Agents React Post"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/agents/act": {
      "post": {
        "tags": [
          "/agents"
        ],
        "summary": "Run Act Agent",
        "operationId": "run_act_agent_v1_agents_act_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AgentData-Input"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgentData-Output"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/openapi.json": {
      "get": {
        "tags": [
          "docs"
        ],
        "summary": "Open Api Json",
        "operationId": "open_api_json_v1_openapi_json_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/docs": {
      "get": {
        "tags": [
          "docs"
        ],
        "summary": "Api Docs",
        "operationId": "api_docs_v1_docs_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    },
    "/v1/redoc": {
      "get": {
        "tags": [
          "docs"
        ],
        "summary": "Api Redoc",
        "operationId": "api_redoc_v1_redoc_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "security": [
          {
            "APIKeyQuery": []
          },
          {
            "APIKeyHeader": []
          },
          {
            "APIKeyCookie": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ActionCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "config": {
            "type": "object",
            "title": "Config",
            "default": {}
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "title": "ActionCreate",
        "description": "base class to be utilized by concrete action types to create action"
      },
      "ActionCreateAPIModelText2ImgMidjourney": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "config": {
            "$ref": "#/components/schemas/DiscordReqModel"
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateAPIModelText2ImgMidjourney"
      },
      "ActionCreateAPIModelText2ImgStableDiffusion": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "config": {
            "$ref": "#/components/schemas/Text2ImgReqModel"
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateAPIModelText2ImgStableDiffusion"
      },
      "ActionCreateAPIModelText2VideoStableDiffusion": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "config": {
            "$ref": "#/components/schemas/Text2VideoReqModel"
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateAPIModelText2VideoStableDiffusion"
      },
      "ActionCreateAudio2TextTranscriptionOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "audio2text_transcription_openai"
          },
          "config": {
            "$ref": "#/components/schemas/TranscriptionReq"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioRes"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Transcription"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateAudio2TextTranscriptionOpenai"
      },
      "ActionCreateAudio2TextTranslationOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "audio2text_translation_openai"
          },
          "config": {
            "$ref": "#/components/schemas/TranslationReq"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioRes"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Translation"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateAudio2TextTranslationOpenai"
      },
      "ActionCreateGenImageDalleOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2img_dalle_openai"
          },
          "config": {
            "$ref": "#/components/schemas/ImageReq"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImagesResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateGenImageDalleOpenai"
      },
      "ActionCreateImageMixerStableDiffusion": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "image_mixer_stable_diffusion"
          },
          "config": {
            "$ref": "#/components/schemas/ImageMixerReqModel"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageMixerRunModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/StableDiffusionRes"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateImageMixerStableDiffusion"
      },
      "ActionCreateImg2ImgBulkEditClaid": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "img2img_bulk_edit_claid"
          },
          "config": {
            "$ref": "#/components/schemas/ClaidRequestModel"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClaidRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClaidResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateImg2ImgBulkEditClaid"
      },
      "ActionCreateImg2ImgEditOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_search_web"
          },
          "config": {
            "$ref": "#/components/schemas/ImageEdit"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageEditInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImagesResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateImg2ImgEditOpenai"
      },
      "ActionCreateImg2ImgPhotoShootClaid": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "img2img_photoshoot_claid"
          },
          "config": {
            "$ref": "#/components/schemas/ClaidPhotoShootRequestModel"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClaidPhotoShootRequestModel"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ClaidPhotoShootOutputModel-Input"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateImg2ImgPhotoShootClaid"
      },
      "ActionCreateImg2ImgVariationOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_search_web"
          },
          "config": {
            "$ref": "#/components/schemas/ImageCreateVariation"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImageVariationInput"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ImagesResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateImg2ImgVariationOpenai"
      },
      "ActionCreateMultimodalAssistantOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "multimodal_assistant_openai"
          },
          "config": {
            "$ref": "#/components/schemas/AssistantOpenaiConfigCreate"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObjs"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateMultimodalAssistantOpenai"
      },
      "ActionCreateText2AudioSpeechOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2audio_openai"
          },
          "config": {
            "$ref": "#/components/schemas/SpeechReq"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/AudioRes"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2AudioSpeechOpenai"
      },
      "ActionCreateText2TextLlmChatOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_llm_chat_openai"
          },
          "config": {
            "$ref": "#/components/schemas/ChatReq"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObjs"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2TextLlmChatOpenai"
      },
      "ActionCreateText2TextLlmChatWithVectorSearchOpenai": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_llm_chat_with_vector_search_openai"
          },
          "config": {
            "$ref": "#/components/schemas/ActionCreateText2TextLlmChatWithVectorSearchOpenaiConfig"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2TextLlmChatWithVectorSearchOpenai"
      },
      "ActionCreateText2TextLlmChatWithVectorSearchOpenaiConfig": {
        "properties": {
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id"
          },
          "chat_req": {
            "$ref": "#/components/schemas/ChatReq"
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObjs"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "datastore_id",
          "chat_req"
        ],
        "title": "ActionCreateText2TextLlmChatWithVectorSearchOpenaiConfig"
      },
      "ActionCreateText2TextReadUrl": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_read_url"
          },
          "config": {
            "$ref": "#/components/schemas/ReadUrlConfig"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2TextReadUrl"
      },
      "ActionCreateText2TextSearchMaps": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_search_maps"
          },
          "config": {
            "$ref": "#/components/schemas/SearchMapsConfig"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2TextSearchMaps"
      },
      "ActionCreateText2TextSearchWeb": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_search_web"
          },
          "config": {
            "$ref": "#/components/schemas/SearchWebConfig"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2TextSearchWeb"
      },
      "ActionCreateText2TextUserInput": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ActionType"
              }
            ],
            "default": "text2text_user_input"
          },
          "config": {
            "$ref": "#/components/schemas/UserInputParams"
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "name",
          "config"
        ],
        "title": "ActionCreateText2TextUserInput"
      },
      "ActionDoc": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "user_manual": {
            "type": "string",
            "title": "User Manual",
            "default": ""
          },
          "type": {
            "$ref": "#/components/schemas/ActionType"
          },
          "config": {
            "type": "object",
            "title": "Config",
            "default": {}
          },
          "results": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ActionResult"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results",
            "default": []
          },
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "is_published": {
            "type": "boolean",
            "title": "Is Published",
            "default": false
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:34.251049"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "type",
          "user_id",
          "_id"
        ],
        "title": "ActionDoc"
      },
      "ActionGraphCreate": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "nodes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes",
            "description": "map of node to action",
            "examples": [
              {
                "node1": "action1",
                "node2": "action2",
                "node3": "action3"
              }
            ]
          },
          "node_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Node"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Details",
            "description": "map of nodeId to Node",
            "examples": [
              {
                "node1": {
                  "data": {
                    "actionId": "action1",
                    "label": "action1_name_version"
                  },
                  "id": "node1",
                  "position": {
                    "x": 288,
                    "y": 203
                  },
                  "type": "default"
                }
              }
            ]
          },
          "graph": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Graph",
            "description": "map of node to nodes",
            "examples": [
              {
                "node1": [
                  "node2",
                  "node3"
                ],
                "node2": [
                  "node3"
                ]
              }
            ]
          },
          "start_node_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Node Id"
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/ActionDoc"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "ActionGraphCreate",
        "description": "Input from User to create action_graph"
      },
      "ActionGraphDoc-Input": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "nodes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes",
            "description": "map of node to action",
            "examples": [
              {
                "node1": "action1",
                "node2": "action2",
                "node3": "action3"
              }
            ]
          },
          "node_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Node"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Details",
            "description": "map of nodeId to Node",
            "examples": [
              {
                "node1": {
                  "data": {
                    "actionId": "action1",
                    "label": "action1_name_version"
                  },
                  "id": "node1",
                  "position": {
                    "x": 288,
                    "y": 203
                  },
                  "type": "default"
                }
              }
            ]
          },
          "graph": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Graph",
            "description": "map of node to nodes",
            "examples": [
              {
                "node1": [
                  "node2",
                  "node3"
                ],
                "node2": [
                  "node3"
                ]
              }
            ]
          },
          "start_node_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Node Id"
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/ActionDoc"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:40.271228"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "default": "2024-03-17T07:17:40.271235"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "_id"
        ],
        "title": "ActionGraphDoc"
      },
      "ActionGraphDoc-Output": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "version": {
            "type": "number",
            "title": "Version",
            "default": 0
          },
          "description": {
            "type": "string",
            "title": "Description",
            "default": ""
          },
          "nodes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes",
            "description": "map of node to action",
            "examples": [
              {
                "node1": "action1",
                "node2": "action2",
                "node3": "action3"
              }
            ]
          },
          "node_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Node"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Details",
            "description": "map of nodeId to Node",
            "examples": [
              {
                "node1": {
                  "data": {
                    "actionId": "action1",
                    "label": "action1_name_version"
                  },
                  "id": "node1",
                  "position": {
                    "x": 288,
                    "y": 203
                  },
                  "type": "default"
                }
              }
            ]
          },
          "graph": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Graph",
            "description": "map of node to nodes",
            "examples": [
              {
                "node1": [
                  "node2",
                  "node3"
                ],
                "node2": [
                  "node3"
                ]
              }
            ]
          },
          "start_node_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Node Id"
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/ActionDoc"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:40.271228"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "default": "2024-03-17T07:17:40.271235"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "user_id",
          "_id"
        ],
        "title": "ActionGraphDoc"
      },
      "ActionGraphResultDoc": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "status": {
            "$ref": "#/components/schemas/EventResultStatus"
          },
          "error_message": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_saved": {
            "type": "boolean",
            "title": "Is Saved",
            "default": false
          },
          "result": {
            "$ref": "#/components/schemas/ActionGraphDoc-Output"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:34.330107"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "default": "2024-03-17T07:17:34.330113"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "status",
          "result",
          "user_id",
          "_id"
        ],
        "title": "ActionGraphResultDoc"
      },
      "ActionGraphResultUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventResultStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "error_message": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_saved": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Saved"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActionGraphDoc-Input"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ActionGraphResultUpdate",
        "description": "Input from User to update Action Result"
      },
      "ActionGraphUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "version": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "nodes": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Nodes",
            "description": "map of node to action",
            "examples": [
              {
                "node1": "action1",
                "node2": "action2",
                "node3": "action3"
              }
            ]
          },
          "node_details": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/Node"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Node Details",
            "description": "map of nodeId to Node",
            "examples": [
              {
                "node1": {
                  "data": {
                    "actionId": "action1",
                    "label": "action1_name_version"
                  },
                  "id": "node1",
                  "position": {
                    "x": 288,
                    "y": 203
                  },
                  "type": "default"
                }
              }
            ]
          },
          "graph": {
            "anyOf": [
              {
                "additionalProperties": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Graph",
            "description": "map of node to nodes",
            "examples": [
              {
                "node1": [
                  "node2",
                  "node3"
                ],
                "node2": [
                  "node3"
                ]
              }
            ]
          },
          "start_node_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Node Id"
          },
          "input": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "output": {
            "anyOf": [
              {
                "additionalProperties": {
                  "$ref": "#/components/schemas/ActionDoc"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          }
        },
        "type": "object",
        "title": "ActionGraphUpdate"
      },
      "ActionResult": {
        "properties": {
          "input": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Input"
          },
          "output": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Output"
          }
        },
        "type": "object",
        "title": "ActionResult"
      },
      "ActionResultDoc": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "status": {
            "$ref": "#/components/schemas/EventResultStatus"
          },
          "error_message": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_saved": {
            "type": "boolean",
            "title": "Is Saved",
            "default": false
          },
          "result": {
            "$ref": "#/components/schemas/ActionDoc"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:34.330107"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "default": "2024-03-17T07:17:34.330113"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "status",
          "result",
          "user_id",
          "_id"
        ],
        "title": "ActionResultDoc"
      },
      "ActionResultUpdate": {
        "properties": {
          "type": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventType"
              },
              {
                "type": "null"
              }
            ]
          },
          "status": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/EventResultStatus"
              },
              {
                "type": "null"
              }
            ]
          },
          "error_message": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_saved": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Saved"
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ActionDoc"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "ActionResultUpdate",
        "description": "Input from User to update Action Result"
      },
      "ActionType": {
        "type": "string",
        "enum": [
          "multimodal_assistant_openai",
          "text2text_llm_chat_openai",
          "text2text_llm_chat_with_vector_search_openai",
          "text2text_read_url",
          "text2text_search_web",
          "text2text_search_maps",
          "text2text_io_mapper",
          "text2text_user_input",
          "text2img_dalle_openai",
          "text2img_stability_ai",
          "text2img_stable_diffusion",
          "text2img_search_image",
          "text2img_imagine_midjourney_ai",
          "text2img_button_midjourney_ai",
          "image_mixer_stable_diffusion",
          "img2img_stable_diffusion",
          "img2img_edit_openai",
          "img2img_variation_openai",
          "img2img_bulk_edit_claid",
          "img2img_photoshoot_claid",
          "text2video_stable_diffusion",
          "text2video_search_video",
          "text2audio_openai",
          "audio2text_transcription_openai",
          "audio2text_translation_openai",
          "mock_action"
        ],
        "title": "ActionType"
      },
      "ActionUpdate": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "version": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Version"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "user_manual": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Manual"
          },
          "config": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Config"
          },
          "is_published": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Is Published"
          }
        },
        "type": "object",
        "title": "ActionUpdate"
      },
      "Adjustments": {
        "properties": {
          "hdr": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "$ref": "#/components/schemas/Intensity"
              },
              {
                "$ref": "#/components/schemas/Stitching"
              }
            ],
            "title": "Hdr",
            "default": 0
          },
          "exposure": {
            "type": "integer",
            "title": "Exposure",
            "default": 1
          },
          "saturation": {
            "type": "integer",
            "title": "Saturation",
            "default": 1
          },
          "contrast": {
            "type": "integer",
            "title": "Contrast",
            "default": 1
          },
          "sharpness": {
            "type": "integer",
            "title": "Sharpness",
            "default": 1
          }
        },
        "type": "object",
        "title": "Adjustments"
      },
      "AgentData-Input": {
        "properties": {
          "goal": {
            "type": "string",
            "title": "Goal"
          },
          "context": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam-Input"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam-Input"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Context",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "goal"
        ],
        "title": "AgentData"
      },
      "AgentData-Output": {
        "properties": {
          "goal": {
            "type": "string",
            "title": "Goal"
          },
          "context": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam-Output"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam-Output"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Context",
            "default": []
          }
        },
        "type": "object",
        "required": [
          "goal"
        ],
        "title": "AgentData"
      },
      "AssistantOpenaiConfigCreate": {
        "properties": {
          "extra_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Headers"
          },
          "extra_query": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Query"
          },
          "extra_body": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Extra Body"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout"
          },
          "model": {
            "type": "string",
            "enum": [
              "gpt-4-turbo-preview",
              "gpt-4-1106-preview",
              "gpt-4-vision-preview",
              "gpt-4",
              "gpt-4-0314",
              "gpt-4-0613",
              "gpt-4-32k",
              "gpt-4-32k-0314",
              "gpt-4-32k-0613",
              "gpt-3.5-turbo",
              "gpt-3.5-turbo-16k",
              "gpt-3.5-turbo-0301",
              "gpt-3.5-turbo-0613",
              "gpt-3.5-turbo-16k-0613"
            ],
            "title": "Model",
            "default": "gpt-4-turbo-preview"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "file_ids": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Ids"
          },
          "instructions": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instructions"
          },
          "metadata": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Metadata"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/CodeInterpreterToolParam"
                    },
                    {
                      "$ref": "#/components/schemas/RetrievalToolParam"
                    },
                    {
                      "$ref": "#/components/schemas/FunctionToolParam"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          }
        },
        "type": "object",
        "title": "AssistantOpenaiConfigCreate"
      },
      "AudioRes": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "AudioRes"
      },
      "AuthResponse": {
        "properties": {
          "user": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/User"
              },
              {
                "type": "null"
              }
            ]
          },
          "session": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Session"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "title": "AuthResponse"
      },
      "Background": {
        "properties": {
          "remove": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BackgroundRemove"
              }
            ],
            "title": "Remove"
          },
          "blur": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "$ref": "#/components/schemas/BackgroundBlur"
              }
            ],
            "title": "Blur"
          },
          "color": {
            "type": "string",
            "title": "Color"
          }
        },
        "type": "object",
        "title": "Background"
      },
      "BackgroundBlur": {
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "general",
              "cars",
              "products"
            ],
            "title": "Category",
            "default": "general"
          },
          "type": {
            "type": "string",
            "enum": [
              "regular",
              "lens"
            ],
            "title": "Type",
            "default": "regular"
          },
          "level": {
            "type": "string",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "title": "Level",
            "default": "low"
          }
        },
        "type": "object",
        "title": "BackgroundBlur"
      },
      "BackgroundRemove": {
        "properties": {
          "category": {
            "type": "string",
            "enum": [
              "general",
              "cars",
              "products"
            ],
            "title": "Category",
            "default": "general"
          },
          "clipping": {
            "type": "boolean",
            "title": "Clipping",
            "default": true
          }
        },
        "type": "object",
        "title": "BackgroundRemove"
      },
      "BearerAccessToken": {
        "properties": {
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "token_type"
        ],
        "title": "BearerAccessToken"
      },
      "Body_async_run_action_graph_v1_action_graphs__id__async_run_post": {
        "properties": {
          "input": {
            "$ref": "#/components/schemas/TextObj"
          },
          "webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Webhook"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "input"
        ],
        "title": "Body_async_run_action_graph_v1_action_graphs__id__async_run_post"
      },
      "Body_async_run_action_v1_action_market__id__market_async_run_post": {
        "properties": {
          "input": {
            "type": "object",
            "title": "Input"
          },
          "webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Webhook"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "input"
        ],
        "title": "Body_async_run_action_v1_action_market__id__market_async_run_post"
      },
      "Body_async_run_action_v1_actions__id__async_run_post": {
        "properties": {
          "input": {
            "type": "object",
            "title": "Input"
          },
          "webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Webhook"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "input"
        ],
        "title": "Body_async_run_action_v1_actions__id__async_run_post"
      },
      "Body_return_token_v1_auth_token_post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_return_token_v1_auth_token_post"
      },
      "Body_return_user_and_session_v1_auth__post": {
        "properties": {
          "grant_type": {
            "anyOf": [
              {
                "type": "string",
                "pattern": "password"
              },
              {
                "type": "null"
              }
            ],
            "title": "Grant Type"
          },
          "username": {
            "type": "string",
            "title": "Username"
          },
          "password": {
            "type": "string",
            "title": "Password"
          },
          "scope": {
            "type": "string",
            "title": "Scope",
            "default": ""
          },
          "client_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Id"
          },
          "client_secret": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Client Secret"
          }
        },
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "title": "Body_return_user_and_session_v1_auth__post"
      },
      "Body_store_data_async_v1_datastore__id__store_data_async_post": {
        "properties": {
          "text": {
            "$ref": "#/components/schemas/TextObj"
          },
          "webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Webhook"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Body_store_data_async_v1_datastore__id__store_data_async_post"
      },
      "Body_store_files_async_v1_datastore__id__store_files_async_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Multiple files as UploadFile"
          },
          "webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Webhook"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_store_files_async_v1_datastore__id__store_files_async_post"
      },
      "Body_store_urls_async_v1_datastore__id__store_urls_async_post": {
        "properties": {
          "urls": {
            "items": {
              "type": "string",
              "maxLength": 2083,
              "minLength": 1,
              "format": "uri"
            },
            "type": "array",
            "title": "Urls"
          },
          "webhook": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Webhook"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "Body_store_urls_async_v1_datastore__id__store_urls_async_post"
      },
      "Body_upload_file_v1_openai_files__post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File",
            "description": "File as UploadFile"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_file_v1_openai_files__post"
      },
      "Body_upload_files_v1_datastore__id__store_file_post": {
        "properties": {
          "files": {
            "items": {
              "type": "string",
              "format": "binary"
            },
            "type": "array",
            "title": "Files",
            "description": "Multiple files as UploadFile"
          }
        },
        "type": "object",
        "required": [
          "files"
        ],
        "title": "Body_upload_files_v1_datastore__id__store_file_post"
      },
      "ChatCompletionAssistantMessageParam-Input": {
        "properties": {
          "role": {
            "const": "assistant",
            "title": "Role"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "function_call": {
            "$ref": "#/components/schemas/FunctionCall"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionMessageToolCallParam-Input"
            },
            "type": "array",
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatCompletionAssistantMessageParam"
      },
      "ChatCompletionAssistantMessageParam-Output": {
        "properties": {
          "role": {
            "const": "assistant",
            "title": "Role"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "function_call": {
            "$ref": "#/components/schemas/FunctionCall"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "tool_calls": {
            "items": {
              "$ref": "#/components/schemas/ChatCompletionMessageToolCallParam-Output"
            },
            "type": "array",
            "title": "Tool Calls"
          }
        },
        "type": "object",
        "required": [
          "role"
        ],
        "title": "ChatCompletionAssistantMessageParam"
      },
      "ChatCompletionContentPartImageParam": {
        "properties": {
          "image_url": {
            "$ref": "#/components/schemas/ImageURL"
          },
          "type": {
            "const": "image_url",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "image_url",
          "type"
        ],
        "title": "ChatCompletionContentPartImageParam"
      },
      "ChatCompletionContentPartTextParam": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          },
          "type": {
            "const": "text",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "text",
          "type"
        ],
        "title": "ChatCompletionContentPartTextParam"
      },
      "ChatCompletionFunctionMessageParam": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "role": {
            "const": "function",
            "title": "Role"
          }
        },
        "type": "object",
        "required": [
          "content",
          "name",
          "role"
        ],
        "title": "ChatCompletionFunctionMessageParam"
      },
      "ChatCompletionMessageToolCallParam-Input": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/openai__types__chat__chat_completion_message_tool_call_param__Function"
          },
          "type": {
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "function",
          "type"
        ],
        "title": "ChatCompletionMessageToolCallParam"
      },
      "ChatCompletionMessageToolCallParam-Output": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "function": {
            "$ref": "#/components/schemas/Function-Output"
          },
          "type": {
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "id",
          "function",
          "type"
        ],
        "title": "ChatCompletionMessageToolCallParam"
      },
      "ChatCompletionNamedToolChoiceParam": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/openai__types__chat__chat_completion_named_tool_choice_param__Function"
          },
          "type": {
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "function",
          "type"
        ],
        "title": "ChatCompletionNamedToolChoiceParam"
      },
      "ChatCompletionSystemMessageParam": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "role": {
            "const": "system",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionSystemMessageParam"
      },
      "ChatCompletionToolMessageParam": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          },
          "role": {
            "const": "tool",
            "title": "Role"
          },
          "tool_call_id": {
            "type": "string",
            "title": "Tool Call Id"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role",
          "tool_call_id"
        ],
        "title": "ChatCompletionToolMessageParam"
      },
      "ChatCompletionToolParam": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionDefinition"
          },
          "type": {
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "function",
          "type"
        ],
        "title": "ChatCompletionToolParam"
      },
      "ChatCompletionUserMessageParam-Input": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartImageParam"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "const": "user",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionUserMessageParam"
      },
      "ChatCompletionUserMessageParam-Output": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartTextParam"
                    },
                    {
                      "$ref": "#/components/schemas/ChatCompletionContentPartImageParam"
                    }
                  ]
                },
                "type": "array"
              }
            ],
            "title": "Content"
          },
          "role": {
            "const": "user",
            "title": "Role"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "content",
          "role"
        ],
        "title": "ChatCompletionUserMessageParam"
      },
      "ChatDoc": {
        "properties": {
          "action": {
            "$ref": "#/components/schemas/ActionDoc"
          },
          "messages": {
            "items": {
              "$ref": "#/components/schemas/Message"
            },
            "type": "array",
            "title": "Messages"
          },
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:40.561762"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "action",
          "messages",
          "title",
          "user_id",
          "_id"
        ],
        "title": "ChatDoc"
      },
      "ChatReq": {
        "properties": {
          "messages": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ChatCompletionSystemMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionUserMessageParam-Input"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionAssistantMessageParam-Input"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionToolMessageParam"
                },
                {
                  "$ref": "#/components/schemas/ChatCompletionFunctionMessageParam"
                }
              ]
            },
            "type": "array",
            "title": "Messages"
          },
          "model": {
            "type": "string",
            "enum": [
              "gpt-4-0125-preview",
              "gpt-4-turbo-preview",
              "gpt-4-1106-preview",
              "gpt-4-vision-preview",
              "gpt-4",
              "gpt-4-0314",
              "gpt-4-0613",
              "gpt-4-32k",
              "gpt-4-32k-0314",
              "gpt-4-32k-0613",
              "gpt-3.5-turbo",
              "gpt-3.5-turbo-16k",
              "gpt-3.5-turbo-0301",
              "gpt-3.5-turbo-0613",
              "gpt-3.5-turbo-1106",
              "gpt-3.5-turbo-0125",
              "gpt-3.5-turbo-16k-0613"
            ],
            "title": "Model",
            "default": "gpt-3.5-turbo-16k-0613"
          },
          "frequency_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Frequency Penalty"
          },
          "logit_bias": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "integer"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logit Bias"
          },
          "logprobs": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Logprobs"
          },
          "max_tokens": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Tokens",
            "default": 2000
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": 1
          },
          "presence_penalty": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Presence Penalty"
          },
          "response_format": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ResponseFormat"
              },
              {
                "type": "null"
              }
            ]
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed"
          },
          "stop": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Stop",
            "default": "stop"
          },
          "stream": {
            "anyOf": [
              {
                "const": false
              },
              {
                "const": true
              },
              {
                "type": "null"
              }
            ],
            "title": "Stream",
            "default": false
          },
          "temperature": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Temperature",
            "default": 0.8
          },
          "tool_choice": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "none",
                  "auto"
                ]
              },
              {
                "$ref": "#/components/schemas/ChatCompletionNamedToolChoiceParam"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tool Choice"
          },
          "tools": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ChatCompletionToolParam"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tools"
          },
          "top_logprobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top Logprobs"
          },
          "top_p": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Top P"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          },
          "extra_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Headers"
          },
          "extra_query": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Query"
          },
          "extra_body": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Extra Body"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout",
            "default": 180
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "ChatReq"
      },
      "ChatUpdate": {
        "properties": {
          "title": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Title"
          },
          "messages": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Message"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Messages"
          }
        },
        "type": "object",
        "required": [
          "messages"
        ],
        "title": "ChatUpdate"
      },
      "ClaidObject": {
        "properties": {
          "ext": {
            "type": "string",
            "title": "Ext"
          },
          "mps": {
            "type": "number",
            "title": "Mps"
          },
          "mime": {
            "type": "string",
            "title": "Mime"
          },
          "format": {
            "type": "string",
            "title": "Format"
          },
          "width": {
            "type": "integer",
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "tmp_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Tmp Url"
          }
        },
        "type": "object",
        "required": [
          "ext",
          "mps",
          "mime",
          "format",
          "width",
          "height"
        ],
        "title": "ClaidObject"
      },
      "ClaidPhotoShootOutputDataModel": {
        "properties": {
          "input": {
            "$ref": "#/components/schemas/ClaidObject"
          },
          "output": {
            "items": {
              "$ref": "#/components/schemas/ClaidObject"
            },
            "type": "array",
            "title": "Output"
          }
        },
        "type": "object",
        "required": [
          "input",
          "output"
        ],
        "title": "ClaidPhotoShootOutputDataModel"
      },
      "ClaidPhotoShootOutputModel-Input": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaidPhotoShootOutputDataModel"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClaidPhotoShootOutputModel"
      },
      "ClaidPhotoShootOutputModel-Output": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaidPhotoShootOutputDataModel"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClaidPhotoShootOutputModel"
      },
      "ClaidPhotoShootRequestModel": {
        "properties": {
          "output": {
            "$ref": "#/components/schemas/PhotoshootOutput"
          },
          "object": {
            "$ref": "#/components/schemas/PhotoshootObject"
          },
          "scene": {
            "$ref": "#/components/schemas/PhotoshootScene"
          }
        },
        "type": "object",
        "required": [
          "output",
          "object",
          "scene"
        ],
        "title": "ClaidPhotoShootRequestModel"
      },
      "ClaidRequestModel": {
        "properties": {
          "input": {
            "type": "string",
            "title": "Input"
          },
          "operations": {
            "$ref": "#/components/schemas/Operations"
          },
          "output": {
            "type": "string",
            "title": "Output"
          }
        },
        "type": "object",
        "required": [
          "input",
          "operations",
          "output"
        ],
        "title": "ClaidRequestModel"
      },
      "ClaidResponse": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/ClaidResponseData"
          }
        },
        "type": "object",
        "required": [
          "data"
        ],
        "title": "ClaidResponse"
      },
      "ClaidResponseData": {
        "properties": {
          "id": {
            "type": "integer",
            "title": "Id"
          },
          "status": {
            "type": "string",
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "title": "Created At"
          },
          "request": {
            "$ref": "#/components/schemas/ClaidRequestModel"
          },
          "errors": {
            "items": {
              "type": "string"
            },
            "type": "array",
            "title": "Errors"
          },
          "result_url": {
            "type": "string",
            "title": "Result Url"
          },
          "results": {
            "items": {
              "$ref": "#/components/schemas/ClaidResult"
            },
            "type": "array",
            "title": "Results"
          }
        },
        "type": "object",
        "required": [
          "id",
          "status",
          "created_at",
          "request"
        ],
        "title": "ClaidResponseData"
      },
      "ClaidResult": {
        "properties": {
          "input_object": {
            "$ref": "#/components/schemas/ClaidObject"
          },
          "output_object": {
            "$ref": "#/components/schemas/ClaidObject"
          }
        },
        "type": "object",
        "required": [
          "input_object",
          "output_object"
        ],
        "title": "ClaidResult"
      },
      "CodeInterpreterToolParam": {
        "properties": {
          "type": {
            "const": "code_interpreter",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "CodeInterpreterToolParam"
      },
      "Crop": {
        "properties": {
          "crop": {
            "type": "string",
            "enum": [
              "center",
              "smart"
            ],
            "title": "Crop",
            "default": "smart"
          }
        },
        "type": "object",
        "title": "Crop"
      },
      "DatastoreMetaDoc": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "datastore_id": {
            "type": "string",
            "title": "Datastore Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:40.814609"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "name",
          "datastore_id",
          "user_id",
          "_id"
        ],
        "title": "DatastoreMetaDoc"
      },
      "DatastoreResult": {
        "properties": {
          "resource": {
            "type": "string",
            "title": "Resource"
          },
          "status": {
            "$ref": "#/components/schemas/EventResultStatus"
          }
        },
        "type": "object",
        "required": [
          "resource",
          "status"
        ],
        "title": "DatastoreResult"
      },
      "DatastoreResultDoc": {
        "properties": {
          "type": {
            "$ref": "#/components/schemas/EventType"
          },
          "status": {
            "$ref": "#/components/schemas/EventResultStatus"
          },
          "error_message": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TextObj"
              },
              {
                "type": "null"
              }
            ]
          },
          "is_saved": {
            "type": "boolean",
            "title": "Is Saved",
            "default": false
          },
          "result": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/DatastoreResults"
              },
              {
                "type": "null"
              }
            ]
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "default": "2024-03-17T07:17:34.330107"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At",
            "default": "2024-03-17T07:17:34.330113"
          },
          "_id": {
            "type": "string",
            "title": " Id"
          }
        },
        "type": "object",
        "required": [
          "type",
          "status",
          "user_id",
          "_id"
        ],
        "title": "DatastoreResultDoc"
      },
      "DatastoreResults": {
        "properties": {
          "status_for": {
            "items": {
              "$ref": "#/components/schemas/DatastoreResult"
            },
            "type": "array",
            "title": "Status For",
            "default": []
          }
        },
        "type": "object",
        "title": "DatastoreResults"
      },
      "DiscordAttachment": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "proxy_url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Proxy Url"
          },
          "width": {
            "type": "integer",
            "title": "Width"
          },
          "height": {
            "type": "integer",
            "title": "Height"
          },
          "content_type": {
            "type": "string",
            "title": "Content Type"
          },
          "id": {
            "type": "string",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "size": {
            "type": "integer",
            "title": "Size"
          }
        },
        "type": "object",
        "required": [
          "url",
          "proxy_url",
          "width",
          "height",
          "content_type",
          "id",
          "filename",
          "size"
        ],
        "title": "DiscordAttachment"
      },
      "DiscordChild": {
        "properties": {
          "button": {
            "type": "string",
            "title": "Button"
          },
          "jobid": {
            "type": "string",
            "title": "Jobid"
          },
          "messageId": {
            "type": "string",
            "title": "Messageid"
          }
        },
        "type": "object",
        "required": [
          "button",
          "jobid",
          "messageId"
        ],
        "title": "DiscordChild"
      },
      "DiscordErrorResponse": {
        "properties": {
          "error": {
            "type": "string",
            "title": "Error"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          }
        },
        "type": "object",
        "required": [
          "error",
          "code"
        ],
        "title": "DiscordErrorResponse"
      },
      "DiscordJobsApiResponse": {
        "properties": {
          "jobid": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Jobid"
          },
          "verb": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Verb"
          },
          "status": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status"
          },
          "created": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Created"
          },
          "updated": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "button": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Button"
          },
          "children": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DiscordChild"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Children"
          },
          "buttons": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Buttons"
          },
          "discord": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Discord"
          },
          "channel": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Channel"
          },
          "server": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Server"
          },
          "maxJobs": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Maxjobs"
          },
          "messageId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Messageid"
          },
          "replyUrl": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replyurl"
          },
          "replyRef": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Replyref"
          },
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "timestamp": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timestamp"
          },
          "attachments": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/DiscordAttachment"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Attachments"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          }
        },
        "type": "object",
        "required": [
          "jobid",
          "verb",
          "status",
          "created",
          "updated",
          "discord",
          "channel",
          "server",
          "maxJobs",
          "messageId",
          "content",
          "timestamp",
          "code"
        ],
        "title": "DiscordJobsApiResponse"
      },
      "DiscordReqModel": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the image to be generated.",
            "default": ""
          },
          "job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id",
            "description": "Job id to fetch",
            "default": ""
          },
          "button": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Button",
            "description": "Button to run the action",
            "default": ""
          }
        },
        "type": "object",
        "title": "DiscordReqModel"
      },
      "EventResultStatus": {
        "type": "string",
        "enum": [
          "success",
          "processing",
          "error",
          "waiting"
        ],
        "title": "EventResultStatus"
      },
      "EventType": {
        "type": "string",
        "enum": [
          "action_run",
          "action_graph_run",
          "datastore_put"
        ],
        "title": "EventType"
      },
      "Factor": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "friendly_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Friendly Name"
          },
          "factor_type": {
            "anyOf": [
              {
                "const": "totp"
              },
              {
                "type": "string"
              }
            ],
            "title": "Factor Type"
          },
          "status": {
            "type": "string",
            "enum": [
              "verified",
              "unverified"
            ],
            "title": "Status"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "factor_type",
          "status",
          "created_at",
          "updated_at"
        ],
        "title": "Factor",
        "description": "A MFA factor."
      },
      "FileDeleted": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "deleted": {
            "type": "boolean",
            "title": "Deleted"
          },
          "object": {
            "const": "file",
            "title": "Object"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "deleted",
          "object"
        ],
        "title": "FileDeleted"
      },
      "FileObject": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "bytes": {
            "type": "integer",
            "title": "Bytes"
          },
          "created_at": {
            "type": "integer",
            "title": "Created At"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "object": {
            "const": "file",
            "title": "Object"
          },
          "purpose": {
            "type": "string",
            "enum": [
              "fine-tune",
              "fine-tune-results",
              "assistants",
              "assistants_output"
            ],
            "title": "Purpose"
          },
          "status": {
            "type": "string",
            "enum": [
              "uploaded",
              "processed",
              "error"
            ],
            "title": "Status"
          },
          "status_details": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Status Details"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "id",
          "bytes",
          "created_at",
          "filename",
          "object",
          "purpose",
          "status"
        ],
        "title": "FileObject"
      },
      "FileParams": {
        "properties": {
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "content_base64": {
            "type": "string",
            "title": "Content Base64"
          }
        },
        "type": "object",
        "required": [
          "filename",
          "content_base64"
        ],
        "title": "FileParams"
      },
      "Function-Output": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "Function"
      },
      "FunctionCall": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "FunctionCall"
      },
      "FunctionDefinition": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "description": {
            "type": "string",
            "title": "Description"
          },
          "parameters": {
            "type": "object",
            "title": "Parameters"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "FunctionDefinition"
      },
      "FunctionToolParam": {
        "properties": {
          "function": {
            "$ref": "#/components/schemas/FunctionDefinition"
          },
          "type": {
            "const": "function",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "function",
          "type"
        ],
        "title": "FunctionToolParam"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "Image": {
        "properties": {
          "b64_json": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "B64 Json"
          },
          "revised_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Revised Prompt"
          },
          "url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Url"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "title": "Image"
      },
      "ImageCreateVariation": {
        "properties": {
          "extra_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Headers"
          },
          "extra_query": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Query"
          },
          "extra_body": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Extra Body"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout"
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string",
                "format": "path"
              },
              {
                "type": "string",
                "format": "binary"
              }
            ],
            "title": "Image"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "const": "dall-e-2"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N"
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "url",
                  "b64_json"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format"
          },
          "size": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "256x256",
                  "512x512",
                  "1024x1024"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "image"
        ],
        "title": "ImageCreateVariation"
      },
      "ImageEdit": {
        "properties": {
          "extra_headers": {
            "anyOf": [
              {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Headers"
          },
          "extra_query": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Extra Query"
          },
          "extra_body": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Extra Body"
          },
          "timeout": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Timeout"
          },
          "image": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string",
                "format": "path"
              },
              {
                "type": "string",
                "format": "binary"
              }
            ],
            "title": "Image"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "mask": {
            "anyOf": [
              {
                "type": "string",
                "format": "path"
              },
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask"
          },
          "model": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "const": "dall-e-2"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": 1
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "url",
                  "b64_json"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format"
          },
          "size": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "256x256",
                  "512x512",
                  "1024x1024"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          },
          "user": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User"
          }
        },
        "type": "object",
        "required": [
          "image",
          "prompt"
        ],
        "title": "ImageEdit"
      },
      "ImageEditInput": {
        "properties": {
          "image": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string",
                "format": "path"
              },
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt"
          },
          "mask": {
            "anyOf": [
              {
                "type": "string",
                "format": "path"
              },
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Mask"
          },
          "size": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "256x256",
                  "512x512",
                  "1024x1024"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          }
        },
        "type": "object",
        "title": "ImageEditInput"
      },
      "ImageMixerReqModel": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Your API Key used for request authorization",
            "default": "cpAjlj3TdK2fkZ1IeXAoo1vNcTYWLfUfLhVWFSm8CojNf2GQVs9mFAgzbYTc"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the image to be generated"
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Items you don't want in the image"
          },
          "init_image": {
            "type": "string",
            "title": "Init Image",
            "description": "comma separated image urls of images to mix"
          },
          "init_image_weights": {
            "type": "string",
            "title": "Init Image Weights",
            "description": "weight of the images being passed separated by comma. Min 0 and Max 1"
          },
          "width": {
            "type": "integer",
            "maximum": 1024,
            "minimum": 1,
            "title": "Width",
            "description": "Width of the image. Max Height: Width: 1024x1024",
            "default": 512
          },
          "height": {
            "type": "integer",
            "maximum": 1024,
            "minimum": 1,
            "title": "Height",
            "description": "Height of the image. Max Height: Width: 1024x1024",
            "default": 512
          },
          "steps": {
            "type": "integer",
            "maximum": 50,
            "minimum": 1,
            "title": "Steps",
            "description": "Number of denoising steps (minimum: 1; maximum: 50)",
            "default": 50
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 20,
            "minimum": 1,
            "title": "Guidance Scale",
            "description": "Scale for classifier-free guidance (minimum: 1; maximum: 20)",
            "default": 10
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed is used to reproduce results, same seed will give you same image in return again. Pass null for a random number."
          },
          "samples": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "Samples",
            "description": "Number of images to be returned in response. The maximum value is 4.",
            "default": 1
          },
          "webhook": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook",
            "description": "Set an URL to get a POST API call once the image generation is complete."
          },
          "track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Id",
            "description": "This ID is returned in the response to the webhook API call. This will be used to identify the webhook request."
          }
        },
        "type": "object",
        "required": [
          "prompt",
          "init_image",
          "init_image_weights"
        ],
        "title": "ImageMixerReqModel"
      },
      "ImageMixerRunModel": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the image to be generated"
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Items you don't want in the image"
          },
          "init_image": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Init Image",
            "description": "comma separated image urls of images to mix"
          },
          "init_image_weights": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Init Image Weights",
            "description": "weight of the images being passed separated by comma. Min 0 and Max 1"
          },
          "width": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1024,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Width",
            "description": "Width of the image. Max Height: Width: 1024x1024"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1024,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Height",
            "description": "Height of the image. Max Height: Width: 1024x1024"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed is used to reproduce results, same seed will give you same image in return again. Pass null for a random number."
          },
          "samples": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Samples",
            "description": "Number of images to be returned in response. The maximum value is 4."
          },
          "webhook": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook",
            "description": "Set an URL to get a POST API call once the image generation is complete."
          },
          "track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Id",
            "description": "This ID is returned in the response to the webhook API call. This will be used to identify the webhook request."
          }
        },
        "type": "object",
        "title": "ImageMixerRunModel"
      },
      "ImageReq": {
        "properties": {
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "model": {
            "const": "dall-e-3",
            "title": "Model",
            "default": "dall-e-3"
          },
          "n": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "N",
            "default": 1
          },
          "quality": {
            "type": "string",
            "enum": [
              "standard",
              "hd"
            ],
            "title": "Quality",
            "default": "standard"
          },
          "response_format": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "url",
                  "b64_json"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Response Format",
            "default": "url"
          },
          "size": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "256x256",
                  "512x512",
                  "1024x1024",
                  "1792x1024",
                  "1024x1792"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Size",
            "default": "1024x1024"
          },
          "style": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "vivid",
                  "natural"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Style",
            "default": "natural"
          },
          "user": {
            "type": "string",
            "title": "User",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "ImageReq"
      },
      "ImageURL": {
        "properties": {
          "url": {
            "type": "string",
            "title": "Url"
          },
          "detail": {
            "type": "string",
            "enum": [
              "auto",
              "low",
              "high"
            ],
            "title": "Detail"
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "ImageURL"
      },
      "ImageVariationInput": {
        "properties": {
          "image": {
            "anyOf": [
              {
                "type": "string",
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "string",
                "format": "path"
              },
              {
                "type": "string",
                "format": "binary"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image"
          },
          "size": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "256x256",
                  "512x512",
                  "1024x1024"
                ]
              },
              {
                "type": "null"
              }
            ],
            "title": "Size"
          }
        },
        "type": "object",
        "title": "ImageVariationInput"
      },
      "ImagesResponse": {
        "properties": {
          "created": {
            "type": "integer",
            "title": "Created"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/Image"
            },
            "type": "array",
            "title": "Data"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "created",
          "data"
        ],
        "title": "ImagesResponse"
      },
      "Intensity": {
        "properties": {
          "intensity": {
            "type": "integer",
            "title": "Intensity",
            "default": 0
          }
        },
        "type": "object",
        "title": "Intensity"
      },
      "Message": {
        "properties": {
          "role": {
            "$ref": "#/components/schemas/Role"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": [
          "role",
          "content"
        ],
        "title": "Message"
      },
      "Node": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "position": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Position"
              },
              {
                "type": "null"
              }
            ]
          },
          "type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Type"
          },
          "data": {
            "$ref": "#/components/schemas/NodeData"
          }
        },
        "type": "object",
        "required": [
          "id",
          "data"
        ],
        "title": "Node"
      },
      "NodeData": {
        "properties": {
          "label": {
            "type": "string",
            "title": "Label"
          },
          "actionId": {
            "type": "string",
            "title": "Actionid"
          },
          "user_review_required": {
            "type": "boolean",
            "title": "User Review Required",
            "default": false
          },
          "user_review_done": {
            "type": "boolean",
            "title": "User Review Done",
            "default": false
          }
        },
        "type": "object",
        "required": [
          "label",
          "actionId"
        ],
        "title": "NodeData"
      },
      "Operations": {
        "properties": {
          "restorations": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Restorations"
              }
            ]
          },
          "upscale": {
            "type": "string",
            "title": "Upscale"
          },
          "resizing": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Resizing"
              }
            ]
          },
          "adjustments": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Adjustments"
              }
            ]
          },
          "background": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Background"
              }
            ]
          },
          "padding": {
            "type": "string",
            "title": "Padding"
          },
          "privacy": {
            "additionalProperties": {
              "type": "boolean"
            },
            "type": "object",
            "title": "Privacy"
          }
        },
        "type": "object",
        "title": "Operations"
      },
      "PhotoshootObject": {
        "properties": {
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "placement_type": {
            "type": "string",
            "enum": [
              "absolute",
              "original"
            ],
            "title": "Placement Type",
            "default": "original"
          },
          "rotation_degree": {
            "type": "integer",
            "title": "Rotation Degree",
            "default": 0
          },
          "scale": {
            "type": "number",
            "title": "Scale",
            "default": 1
          },
          "position": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PhotoshootPosition"
              }
            ]
          }
        },
        "type": "object",
        "required": [
          "image_url"
        ],
        "title": "PhotoshootObject"
      },
      "PhotoshootOutput": {
        "properties": {
          "destination": {
            "type": "string",
            "title": "Destination"
          },
          "number_of_images": {
            "type": "integer",
            "title": "Number Of Images"
          },
          "format": {
            "type": "string",
            "title": "Format"
          }
        },
        "type": "object",
        "required": [
          "destination"
        ],
        "title": "PhotoshootOutput"
      },
      "PhotoshootPosition": {
        "properties": {
          "x": {
            "type": "number",
            "title": "X",
            "default": 0.5
          },
          "y": {
            "type": "number",
            "title": "Y",
            "default": 0.5
          }
        },
        "type": "object",
        "title": "PhotoshootPosition"
      },
      "PhotoshootScene": {
        "properties": {
          "template_url": {
            "type": "string",
            "title": "Template Url"
          },
          "template_mode": {
            "type": "string",
            "enum": [
              "transform",
              "lock"
            ],
            "title": "Template Mode"
          },
          "color": {
            "type": "string",
            "title": "Color"
          },
          "view": {
            "type": "string",
            "enum": [
              "top",
              "front"
            ],
            "title": "View"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt"
          },
          "negative_prompt": {
            "type": "string",
            "title": "Negative Prompt"
          }
        },
        "type": "object",
        "title": "PhotoshootScene"
      },
      "Position": {
        "properties": {
          "x": {
            "type": "integer",
            "title": "X"
          },
          "y": {
            "type": "integer",
            "title": "Y"
          }
        },
        "type": "object",
        "required": [
          "x",
          "y"
        ],
        "title": "Position"
      },
      "ReadUrlConfig": {
        "properties": {
          "xpath": {
            "type": "string",
            "title": "Xpath",
            "default": "/html/body"
          },
          "attribute": {
            "type": "string",
            "title": "Attribute",
            "default": ""
          }
        },
        "type": "object",
        "title": "ReadUrlConfig"
      },
      "Region": {
        "type": "string",
        "enum": [
          "Arabia",
          "Arabia_en",
          "Argentina",
          "Australia",
          "Austria",
          "Belgium_fr",
          "Belgium_nl",
          "Brazil",
          "Bulgaria",
          "Canada_en",
          "Canada_fr",
          "Catalan",
          "Chile",
          "China",
          "Colombia",
          "Croatia",
          "Czech_Republic",
          "Denmark",
          "Estonia",
          "Finland",
          "France",
          "Germany",
          "Greece",
          "Hong_Kong",
          "Hungary",
          "India",
          "Indonesia",
          "Indonesia_en",
          "Ireland",
          "Israel",
          "Italy",
          "Japan",
          "Korea",
          "Latvia",
          "Lithuania",
          "Latin_America",
          "Malaysia",
          "Malaysia_en",
          "Mexico",
          "Netherlands",
          "New_Zealand",
          "Norway",
          "Peru",
          "Philippines_en",
          "Philippines_tl",
          "Poland",
          "Portugal",
          "Romania",
          "Russia",
          "Singapore_en",
          "Slovak_Republic",
          "Slovenia",
          "South_Africa",
          "Spain",
          "Sweden_sv",
          "Switzerland_de",
          "Switzerland_fr",
          "Switzerland_it",
          "Taiwan",
          "Thailand",
          "Turkey",
          "Ukraine",
          "United_Kingdom_en",
          "United_States_en",
          "United_States_es",
          "Venezuela",
          "Vietnam_vi",
          "No_Region"
        ],
        "title": "Region"
      },
      "Resizing": {
        "properties": {
          "width": {
            "type": "string",
            "title": "Width"
          },
          "height": {
            "type": "string",
            "title": "Height"
          },
          "fit": {
            "anyOf": [
              {
                "type": "string",
                "enum": [
                  "bounds",
                  "cover",
                  "canvas",
                  "outpaint"
                ]
              },
              {
                "$ref": "#/components/schemas/Crop"
              }
            ],
            "title": "Fit",
            "default": "bounds"
          }
        },
        "type": "object",
        "title": "Resizing"
      },
      "ResponseFormat": {
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "text",
              "json_object"
            ],
            "title": "Type"
          }
        },
        "type": "object",
        "title": "ResponseFormat"
      },
      "Restorations": {
        "properties": {
          "decompress": {
            "type": "string",
            "title": "Decompress"
          },
          "upscale": {
            "type": "string",
            "title": "Upscale"
          }
        },
        "type": "object",
        "title": "Restorations"
      },
      "RetrievalToolParam": {
        "properties": {
          "type": {
            "const": "retrieval",
            "title": "Type"
          }
        },
        "type": "object",
        "required": [
          "type"
        ],
        "title": "RetrievalToolParam"
      },
      "Role": {
        "type": "string",
        "enum": [
          "system",
          "user",
          "assistant"
        ],
        "title": "Role"
      },
      "SearchMapsConfig": {
        "properties": {
          "search_type": {
            "const": "maps",
            "title": "Search Type",
            "default": "maps"
          },
          "search_params": {
            "$ref": "#/components/schemas/SearchMapsParams"
          }
        },
        "type": "object",
        "required": [
          "search_params"
        ],
        "title": "SearchMapsConfig"
      },
      "SearchMapsParams": {
        "properties": {
          "keywords": {
            "type": "string",
            "title": "Keywords"
          },
          "place": {
            "type": "string",
            "title": "Place"
          },
          "latitude": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Latitude"
          },
          "longitude": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Longitude"
          },
          "radius": {
            "type": "integer",
            "title": "Radius",
            "default": 0
          },
          "max_results": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Max Results",
            "default": 3
          }
        },
        "type": "object",
        "required": [
          "keywords",
          "place"
        ],
        "title": "SearchMapsParams"
      },
      "SearchTextParams": {
        "properties": {
          "keywords": {
            "type": "string",
            "title": "Keywords",
            "default": ""
          },
          "region": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Region"
              }
            ],
            "default": "No_Region"
          },
          "safesearch": {
            "type": "string",
            "enum": [
              "on",
              "moderate",
              "off"
            ],
            "title": "Safesearch",
            "default": "moderate"
          },
          "timelimit": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Timelimit"
              },
              {
                "type": "null"
              }
            ]
          },
          "max_results": {
            "type": "integer",
            "maximum": 10,
            "minimum": 1,
            "title": "Max Results",
            "default": 3
          }
        },
        "type": "object",
        "title": "SearchTextParams"
      },
      "SearchWebConfig": {
        "properties": {
          "search_type": {
            "type": "string",
            "enum": [
              "web",
              "news"
            ],
            "title": "Search Type",
            "default": "web"
          },
          "search_params": {
            "$ref": "#/components/schemas/SearchTextParams"
          }
        },
        "type": "object",
        "required": [
          "search_params"
        ],
        "title": "SearchWebConfig"
      },
      "Session": {
        "properties": {
          "provider_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Token"
          },
          "provider_refresh_token": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Provider Refresh Token"
          },
          "access_token": {
            "type": "string",
            "title": "Access Token"
          },
          "refresh_token": {
            "type": "string",
            "title": "Refresh Token"
          },
          "expires_in": {
            "type": "integer",
            "title": "Expires In"
          },
          "expires_at": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Expires At"
          },
          "token_type": {
            "type": "string",
            "title": "Token Type"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        },
        "type": "object",
        "required": [
          "access_token",
          "refresh_token",
          "expires_in",
          "token_type",
          "user"
        ],
        "title": "Session"
      },
      "SpeechReq": {
        "properties": {
          "input": {
            "type": "string",
            "title": "Input"
          },
          "model": {
            "type": "string",
            "enum": [
              "tts-1",
              "tts-1-hd"
            ],
            "title": "Model",
            "default": "tts-1"
          },
          "voice": {
            "type": "string",
            "enum": [
              "alloy",
              "echo",
              "fable",
              "onyx",
              "nova",
              "shimmer"
            ],
            "title": "Voice",
            "default": "alloy"
          },
          "response_format": {
            "type": "string",
            "enum": [
              "mp3",
              "opus",
              "aac",
              "flac"
            ],
            "title": "Response Format",
            "default": "mp3"
          },
          "speed": {
            "type": "number",
            "maximum": 4,
            "minimum": 0.25,
            "title": "Speed",
            "default": 1
          }
        },
        "type": "object",
        "required": [
          "input"
        ],
        "title": "SpeechReq"
      },
      "StableDiffusionRes": {
        "properties": {
          "urls": {
            "anyOf": [
              {
                "items": {
                  "type": "string",
                  "maxLength": 2083,
                  "minLength": 1,
                  "format": "uri"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Urls"
          },
          "fetch_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "Fetch Url"
          }
        },
        "type": "object",
        "required": [
          "urls"
        ],
        "title": "StableDiffusionRes"
      },
      "Stitching": {
        "properties": {
          "stitching": {
            "type": "boolean",
            "title": "Stitching",
            "default": false
          }
        },
        "type": "object",
        "title": "Stitching"
      },
      "Text2ImgReqModel": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Your API Key used for request authorization.",
            "default": "cpAjlj3TdK2fkZ1IeXAoo1vNcTYWLfUfLhVWFSm8CojNf2GQVs9mFAgzbYTc"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the image to be generated."
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Items you don't want in the image."
          },
          "width": {
            "type": "integer",
            "maximum": 1024,
            "minimum": 0,
            "title": "Width",
            "description": "Max Height: Width: 1024x1024.",
            "default": 512
          },
          "height": {
            "type": "integer",
            "maximum": 1024,
            "minimum": 0,
            "title": "Height",
            "description": "Max Height: Width: 1024x1024.",
            "default": 512
          },
          "samples": {
            "type": "integer",
            "maximum": 4,
            "minimum": 1,
            "title": "Samples",
            "description": "Number of images to be returned in response. The maximum value is 4.",
            "default": 1
          },
          "safety_checker": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Safety Checker",
            "description": "A checker for NSFW images. If such an image is detected, it will be replaced by a blank image.",
            "default": false
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed is used to reproduce results, same seed will give you same image in return again. Pass null for a random number."
          },
          "instant_response": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Instant Response",
            "description": "queue response instantly before processing finishes instead of waiting a minimum amount of time, default: false, options: true or false",
            "default": false
          },
          "base64": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Base64",
            "description": "Get response as base64 string, default: false, options: true or false",
            "default": false
          },
          "guidance_scale": {
            "type": "number",
            "maximum": 5,
            "minimum": 1,
            "title": "Guidance Scale",
            "description": "Scale for classifier-free guidance (minimum: 1; maximum: 5)",
            "default": 5
          },
          "webhook": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook",
            "description": "Set an URL to get a POST API call once the image generation is complete."
          },
          "track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Id",
            "description": "This ID is returned in the response to the webhook API call. This will be used to identify the webhook request."
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "Text2ImgReqModel"
      },
      "Text2ImgRunModelButton": {
        "properties": {
          "button": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Button",
            "description": "button you want to run on a generated image"
          },
          "job_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Job Id",
            "description": "job id of a processed image via midjourney"
          }
        },
        "type": "object",
        "title": "Text2ImgRunModelButton"
      },
      "Text2VideoReqModel": {
        "properties": {
          "key": {
            "type": "string",
            "title": "Key",
            "description": "Your API Key used for request authorization.",
            "default": "cpAjlj3TdK2fkZ1IeXAoo1vNcTYWLfUfLhVWFSm8CojNf2GQVs9mFAgzbYTc"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the video to be generated."
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Items you don't want in the video.",
            "default": "low quality"
          },
          "seed": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seed",
            "description": "Seed is used to reproduce results, same seed will give you same image in return again. Pass null for a random number."
          },
          "width": {
            "type": "integer",
            "maximum": 1024,
            "minimum": 0,
            "title": "Width",
            "description": "Max Height: Width: 1024x1024.",
            "default": 1024
          },
          "height": {
            "type": "integer",
            "maximum": 1024,
            "minimum": 0,
            "title": "Height",
            "description": "Max Height: Width: 1024x1024.",
            "default": 1024
          },
          "scheduler": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Text2VideoScheduler"
              }
            ],
            "description": "Use it to set a scheduler for video creation.",
            "default": "UniPCMultistepScheduler"
          },
          "seconds": {
            "type": "integer",
            "title": "Seconds",
            "description": "Duration of the video in seconds.",
            "default": 3
          }
        },
        "type": "object",
        "required": [
          "prompt"
        ],
        "title": "Text2VideoReqModel"
      },
      "Text2VideoRunModel": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the video to be generated."
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Items you don't want in the video."
          },
          "scheduler": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/Text2VideoScheduler"
              },
              {
                "type": "null"
              }
            ],
            "description": "Use it to set a scheduler for video creation.",
            "default": "UniPCMultistepScheduler"
          },
          "seconds": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Seconds",
            "description": "Duration of the video in seconds.",
            "default": 3
          }
        },
        "type": "object",
        "title": "Text2VideoRunModel"
      },
      "Text2VideoScheduler": {
        "type": "string",
        "enum": [
          "DDPMScheduler",
          "DDIMScheduler",
          "PNDMScheduler",
          "LMSDiscreteScheduler",
          "EulerDiscreteScheduler",
          "EulerAncestralDiscreteScheduler",
          "DPMSolverMultistepScheduler",
          "HeunDiscreteScheduler",
          "KDPM2DiscreteScheduler",
          "DPMSolverSinglestepScheduler",
          "KDPM2AncestralDiscreteScheduler",
          "UniPCMultistepScheduler",
          "DDIMInverseScheduler",
          "DEISMultistepScheduler",
          "IPNDMScheduler",
          "KarrasVeScheduler",
          "ScoreSdeVeScheduler"
        ],
        "title": "Text2VideoScheduler"
      },
      "TextObj": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text",
            "default": ""
          }
        },
        "type": "object",
        "title": "TextObj"
      },
      "TextObjs": {
        "properties": {
          "texts": {
            "items": {
              "$ref": "#/components/schemas/TextObj"
            },
            "type": "array",
            "title": "Texts",
            "default": []
          }
        },
        "type": "object",
        "title": "TextObjs"
      },
      "Timelimit": {
        "type": "string",
        "enum": [
          "all",
          "day",
          "week",
          "month",
          "year"
        ],
        "title": "Timelimit"
      },
      "Transcription": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Transcription"
      },
      "TranscriptionReq": {
        "properties": {
          "file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Url"
          },
          "model": {
            "const": "whisper-1",
            "title": "Model",
            "default": "whisper-1"
          },
          "language": {
            "type": "string",
            "title": "Language",
            "default": "en"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "default": ""
          },
          "response_format": {
            "type": "string",
            "enum": [
              "json",
              "text",
              "srt",
              "verbose_json",
              "vtt"
            ],
            "title": "Response Format",
            "default": "json"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.2
          }
        },
        "type": "object",
        "title": "TranscriptionReq"
      },
      "Translation": {
        "properties": {
          "text": {
            "type": "string",
            "title": "Text"
          }
        },
        "additionalProperties": true,
        "type": "object",
        "required": [
          "text"
        ],
        "title": "Translation"
      },
      "TranslationReq": {
        "properties": {
          "file_url": {
            "anyOf": [
              {
                "type": "string",
                "maxLength": 2083,
                "minLength": 1,
                "format": "uri"
              },
              {
                "type": "null"
              }
            ],
            "title": "File Url"
          },
          "model": {
            "const": "whisper-1",
            "title": "Model",
            "default": "whisper-1"
          },
          "prompt": {
            "type": "string",
            "title": "Prompt",
            "default": ""
          },
          "response_format": {
            "type": "string",
            "enum": [
              "json",
              "text",
              "srt",
              "verbose_json",
              "vtt"
            ],
            "title": "Response Format",
            "default": "json"
          },
          "temperature": {
            "type": "number",
            "title": "Temperature",
            "default": 0.2
          }
        },
        "type": "object",
        "title": "TranslationReq"
      },
      "User": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "app_metadata": {
            "type": "object",
            "title": "App Metadata"
          },
          "user_metadata": {
            "type": "object",
            "title": "User Metadata"
          },
          "aud": {
            "type": "string",
            "title": "Aud"
          },
          "confirmation_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmation Sent At"
          },
          "recovery_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Recovery Sent At"
          },
          "email_change_sent_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Change Sent At"
          },
          "new_email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "New Email"
          },
          "invited_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Invited At"
          },
          "action_link": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Action Link"
          },
          "email": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email"
          },
          "phone": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Confirmed At"
          },
          "email_confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Email Confirmed At"
          },
          "phone_confirmed_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Phone Confirmed At"
          },
          "last_sign_in_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sign In At"
          },
          "role": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Role"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          },
          "identities": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/UserIdentity"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Identities"
          },
          "factors": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/Factor"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Factors"
          }
        },
        "type": "object",
        "required": [
          "id",
          "app_metadata",
          "user_metadata",
          "aud",
          "created_at"
        ],
        "title": "User"
      },
      "UserIdentity": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "user_id": {
            "type": "string",
            "title": "User Id"
          },
          "identity_data": {
            "type": "object",
            "title": "Identity Data"
          },
          "provider": {
            "type": "string",
            "title": "Provider"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "last_sign_in_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Last Sign In At"
          },
          "updated_at": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "user_id",
          "identity_data",
          "provider",
          "created_at"
        ],
        "title": "UserIdentity"
      },
      "UserInputParams": {
        "properties": {
          "text": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Text"
          },
          "files": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/FileParams"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Files"
          }
        },
        "type": "object",
        "title": "UserInputParams"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      },
      "Webhook": {
        "properties": {
          "url": {
            "type": "string",
            "maxLength": 2083,
            "minLength": 1,
            "format": "uri",
            "title": "Url"
          },
          "track_id": {
            "type": "string",
            "title": "Track Id",
            "default": ""
          }
        },
        "type": "object",
        "required": [
          "url"
        ],
        "title": "Webhook"
      },
      "openai__types__chat__chat_completion_message_tool_call_param__Function": {
        "properties": {
          "arguments": {
            "type": "string",
            "title": "Arguments"
          },
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "arguments",
          "name"
        ],
        "title": "Function"
      },
      "openai__types__chat__chat_completion_named_tool_choice_param__Function": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          }
        },
        "type": "object",
        "required": [
          "name"
        ],
        "title": "Function"
      },
      "src__autobots__action__action_type__action_text2img__action_text2img_imagine_midjourney__Text2ImgRunModel": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the image to be generated."
          }
        },
        "type": "object",
        "title": "Text2ImgRunModel"
      },
      "src__autobots__action__action_type__action_text2img__action_text2img_stable_diffusion__Text2ImgRunModel": {
        "properties": {
          "prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Prompt",
            "description": "Text prompt with description of the things you want in the image to be generated."
          },
          "negative_prompt": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Negative Prompt",
            "description": "Items you don't want in the image."
          },
          "width": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1024,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Width",
            "description": "Max Height: Width: 1024x1024."
          },
          "height": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 1024,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Height",
            "description": "Max Height: Width: 1024x1024."
          },
          "samples": {
            "anyOf": [
              {
                "type": "integer",
                "maximum": 4,
                "minimum": 1
              },
              {
                "type": "null"
              }
            ],
            "title": "Samples",
            "description": "Number of images to be returned in response. The maximum value is 4."
          },
          "webhook": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Webhook",
            "description": "Set an URL to get a POST API call once the image generation is complete."
          },
          "track_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Track Id",
            "description": "This ID is returned in the response to the webhook API call. This will be used to identify the webhook request."
          }
        },
        "type": "object",
        "title": "Text2ImgRunModel"
      }
    },
    "securitySchemes": {
      "APIKeyQuery": {
        "type": "apiKey",
        "in": "query",
        "name": "Authorization"
      },
      "APIKeyHeader": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization"
      },
      "APIKeyCookie": {
        "type": "apiKey",
        "in": "cookie",
        "name": "Authorization"
      },
      "JWT": {
        "type": "oauth2",
        "flows": {
          "password": {
            "scopes": {},
            "tokenUrl": "/v1/auth/token"
          }
        }
      }
    }
  }
}