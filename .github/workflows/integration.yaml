name: Continuous Integration

on:
  push:
    branches:
      - main
    tags:
      - v**
  workflow_dispatch:

env:
  IMAGE_TAG: ${{ github.ref_name }}
  # Datadog Environment
  DD_ENV: ${{ github.ref_name }}
  # Datadog Version
  DD_VERSION: ${{ github.ref_name }}-${{ github.run_number }}

jobs:

#  tests:
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v2
#
#      - name: Setup Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: '3.10'
#
#      - name: Prepare for Tests
#        run: |
#          pip3 install poetry
#          poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi
#
#      - name: Run Tests
##        working-directory: ./tests
#        run: |
#          python -m pytest -vv -n 5
#        env:
#          ENV: ${{ secrets.ENV }}
#          COOKIE_DOMAIN: ${{ secrets.COOKIE_DOMAIN }}
#          SQLALCHEMY_DATABASE_URL: ${{ secrets.SQLALCHEMY_DATABASE_URL }}
#          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
#          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
#          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
#          MONGO_CONN: ${{ secrets.MONGO_CONN }}
#          OPENAI_ORG_ID: ${{ secrets.OPENAI_ORG_ID }}
#          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
#          STABILITY_HOST: ${{ secrets.STABILITY_HOST }}
#          STABILITY_KEY: ${{ secrets.STABILITY_KEY }}
#          UNSPLASH_ACCESS_KEY: ${{ secrets.UNSPLASH_ACCESS_KEY }}
#          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
#          AWS_S3_BUCKET_REGION: ${{ secrets.AWS_S3_BUCKET_REGION }}
#          AWS_S3_PUBLIC_BUCKET_NAME: ${{ secrets.AWS_S3_PUBLIC_BUCKET_NAME }}
#          AWS_S3_PUBLIC_BUCKET_IMAGE_FOLDER: ${{ secrets.AWS_S3_PUBLIC_BUCKET_IMAGE_FOLDER }}
#          PINECONE_ENVIRONMENT: ${{ secrets.PINECONE_ENVIRONMENT }}
#          PINECONE_API_KEY: ${{ secrets.PINECONE_API_KEY }}

  build:
#    needs: [tests]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Login to GitLab Container Registry
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_USERNAME }}
          password: ${{ secrets.GITLAB_TOKEN }}

      - name: Build Docker image
        run: docker build -t registry.gitlab.com/meetkiwi/autobots:${IMAGE_TAG} --build-arg DD_ENV=${DD_ENV} --build-arg DD_VERSION=${DD_VERSION} .

      - name: Push Docker image to GitLab Container Registry
        run: |
          docker push registry.gitlab.com/meetkiwi/autobots:${IMAGE_TAG}
